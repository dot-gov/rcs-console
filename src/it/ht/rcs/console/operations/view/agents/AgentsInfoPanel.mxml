<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:s="library://ns.adobe.com/flex/spark"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:users="it.ht.rcs.console.accounting.view.users.*"
         width="325" height="100%" addedToStage="onAddedToStage()" removedFromStage="onRemovedFromStage(event)">
  
  <fx:Script>
    <![CDATA[
      import it.ht.rcs.console.ObjectUtils;
      import it.ht.rcs.console.agent.controller.AgentManager;
      import it.ht.rcs.console.agent.model.Agent;
      import it.ht.rcs.console.events.RefreshEvent;
      import it.ht.rcs.console.events.SectionEvent;
      import it.ht.rcs.console.operations.view.OperationsSection;
      import it.ht.rcs.console.utils.Size;
      import it.ht.rcs.console.utils.TimeUtils;
      
      import locale.R;
      
      import mx.core.FlexGlobals;
      import mx.managers.PopUpManager;
      import mx.rpc.events.ResultEvent;
      
      [Bindable]
      private var _selectedItem:*;
      
      [Bindable]
      public var showDetails:Boolean;
      
      public var section:OperationsSection;
      
      public function set selectedItem(item:*):void
      {
        //if ( (!item && section.currentState != 'singleAgent') || (item is Agent))
          _selectedItem = item;
      }
      
      private function onAddedToStage():void
      {
        FlexGlobals.topLevelApplication.addEventListener(SectionEvent.CHANGE_SECTION, onSectionChange);
        FlexGlobals.topLevelApplication.addEventListener(RefreshEvent.REFRESH, onRefresh);
        if (!_selectedItem && section.currentState == 'singleAgent')
          _selectedItem = section.stateManager.selectedAgent;
      }
      
      private function onRefresh(e:Event):void
      {
        //selectedItem = section.stateManager.selectedAgent;
        if(_selectedItem)
        AgentManager.instance.show(_selectedItem._id, onResult)
        
      }
      
      private function onSectionChange(e:SectionEvent):void
      {
      
        _selectedItem=e.item
      }
      
      private function onResult(e:ResultEvent):void
      {
        _selectedItem=e.result;
      }
      
      private function sync_status(status:int):String
      {
        switch(status) {
          case 0:
            return R.get('IDLE');
            break;
          case 1:
            return R.get('IN_PROGRESS');
            break;
          case 2:
            return R.get('TIMEOUT');
            break;
        }
        return '';
      }
      
      protected function onRemovedFromStage(event:Event):void
      {
        FlexGlobals.topLevelApplication.removeEventListener(RefreshEvent.REFRESH, onRefresh);
        
      }
      
      private function editNumber():void
      {
        var popup:AgentsForm=PopUpManager.createPopUp(root, AgentsForm, true) as AgentsForm;
        popup.operation=section.stateManager.selectedOperation;
        popup.target=section.stateManager.selectedTarget;
        popup.agent=_selectedItem as Agent;
        popup.currentState=AgentsForm.EDIT;
        PopUpManager.centerPopUp(popup);
      }
      
    ]]>
  </fx:Script>

  <s:Line left="0" top="0" bottom="0">
    <s:stroke><s:SolidColorStroke color="#333333"/></s:stroke>
  </s:Line>
  
  <s:Rect left="6" top="0" width="100%" height="30" bottomLeftRadiusX="5" bottomLeftRadiusY="5"
          topLeftRadiusX="5" topLeftRadiusY="5">
    <s:fill>
      <s:LinearGradient>
        <s:entries>
          <s:GradientEntry color="#E3E6EC"/>
          <s:GradientEntry color="#ffffff"/>
        </s:entries>
      </s:LinearGradient>
    </s:fill>
  </s:Rect>
  
  <s:Label left="15" height="30" color="#333333" fontFamily="Myriad" fontSize="18"
           text="{R.get('DETAILS')}" verticalAlign="middle"/>

  <s:Group left="6" top="35" width="100%" height="100%">
    <s:Form visible="{_selectedItem!=null &amp;&amp; (_selectedItem._kind == 'agent' || _selectedItem._kind=='factory') &amp;&amp; showDetails}">
      <s:FormItem label="{R.get('NAME')}">
        <s:RichEditableText editable="false" text="{_selectedItem.name}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('STATUS')}">
        <s:RichEditableText editable="false" text="{ObjectUtils.capitalize(_selectedItem.status)}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('UNINSTALLED')}" visible="{_selectedItem.status == 'closed'}" includeInLayout="{_selectedItem.status == 'closed'}">
        <s:RichEditableText editable="false" text="{_selectedItem.uninstalled}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('DESCRIPTION')}">
        <s:RichEditableText width="200" height="30" editable="false" lineHeight="15"
                            text="{_selectedItem.desc}" textAlign="left"/>
      </s:FormItem>
      <s:FormItem label="{R.get('TYPE')}">
        <s:RichEditableText editable="false" text="{ObjectUtils.capitalize(_selectedItem.type)}"/>
      </s:FormItem>
      
      <s:FormItem label="{R.get('NUMBER')}" visible="{_selectedItem.type=='mobile'}" includeInLayout="{_selectedItem.type=='mobile'}">
        <s:RichEditableText editable="false" text="{ObjectUtils.capitalize(_selectedItem.pn)}" visible="{_selectedItem.pn!=null}" includeInLayout="{_selectedItem.pn!=null}"/>
        <s:Button label="{_selectedItem.pn!=null &amp;&amp; _selectedItem.pn!=''? R.get('CHANGE'): R.get('ADD')}" click="editNumber()"/>
      </s:FormItem>
      
      <s:FormItem label="{R.get('LEVEL')}" includeInLayout="{_selectedItem._kind=='agent'}" visible="{_selectedItem._kind=='agent'}">
        <s:RichEditableText editable="false" text="{ObjectUtils.capitalize(_selectedItem.level)}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('IDENT')}">
        <s:RichEditableText editable="false" text="{_selectedItem.ident}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('DEMO')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText editable="false" text="{ObjectUtils.capitalize(_selectedItem.demo)}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('PLATFORM')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText editable="false" text="{_selectedItem.platform}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('VERSION')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText editable="false" text="{_selectedItem.version}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('LAST_SYNC')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" editable="false"
                            text="{TimeUtils.timestampFormatter(_selectedItem.stat.last_sync * 1000)}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('LAST_SYNC_STATUS')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" editable="false" text="{sync_status(_selectedItem.stat.last_sync_status)}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('INSTANCE')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" text="{_selectedItem.instance}" toolTip="{_selectedItem.instance}" editable="false" heightInLines="1"/>
      </s:FormItem>
      <s:FormItem label="{R.get('EVIDENCE_SIZE')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText editable="false" text="{Size.toHumanBytes(_selectedItem.stat.size + _selectedItem.stat.grid_size)}"/>
      </s:FormItem>
      <s:Spacer height="20"/>
      <s:FormItem label="{R.get('USER')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" editable="false" text="{_selectedItem.stat.user}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('DEVICE')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" editable="false" text="{_selectedItem.stat.device}"/>
      </s:FormItem>
      <s:FormItem label="{R.get('SOURCE')}" visible="{_selectedItem._kind == 'agent'}">
        <s:RichEditableText width="200" editable="false" text="{_selectedItem.stat.source}"/>
      </s:FormItem>
      <s:Spacer height="20"/>
      <s:FormItem label="{R.get('GHOST')}" visible="{_selectedItem._kind == 'agent' &amp;&amp; _selectedItem.stat.ghost==true}">
        <s:RichEditableText width="200" editable="false" text="{R.get('ACTIVATED')}" color="0xFF0000"/>
      </s:FormItem>
    </s:Form>
  </s:Group>

</s:Group>